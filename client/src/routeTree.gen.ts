/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WebcamImport } from './routes/_webcam'
import { Route as NonauthImport } from './routes/_nonauth'
import { Route as MdcImport } from './routes/_mdc'
import { Route as WebcamScannerImport } from './routes/_webcam/scanner'
import { Route as NonauthLogoutImport } from './routes/_nonauth/logout'
import { Route as NonauthLoginImport } from './routes/_nonauth/login'
import { Route as NonauthHomeImport } from './routes/_nonauth/home'
import { Route as MdcUnknownsImport } from './routes/_mdc/unknowns'
import { Route as MdcNewformImport } from './routes/_mdc/newform'
import { Route as MdcCollectionsImport } from './routes/_mdc/collections'
import { Route as MdcCollectionsCollectionIdImport } from './routes/_mdc/collections_.$collectionId'
import { Route as MdcCollectionsCollectionIdDiscIdImport } from './routes/_mdc/collections_.$collectionId_.$discId'

// Create/Update Routes

const WebcamRoute = WebcamImport.update({
  id: '/_webcam',
  getParentRoute: () => rootRoute,
} as any)

const NonauthRoute = NonauthImport.update({
  id: '/_nonauth',
  getParentRoute: () => rootRoute,
} as any)

const MdcRoute = MdcImport.update({
  id: '/_mdc',
  getParentRoute: () => rootRoute,
} as any)

const WebcamScannerRoute = WebcamScannerImport.update({
  path: '/scanner',
  getParentRoute: () => WebcamRoute,
} as any)

const NonauthLogoutRoute = NonauthLogoutImport.update({
  path: '/logout',
  getParentRoute: () => NonauthRoute,
} as any)

const NonauthLoginRoute = NonauthLoginImport.update({
  path: '/login',
  getParentRoute: () => NonauthRoute,
} as any)

const NonauthHomeRoute = NonauthHomeImport.update({
  path: '/home',
  getParentRoute: () => NonauthRoute,
} as any)

const MdcUnknownsRoute = MdcUnknownsImport.update({
  path: '/unknowns',
  getParentRoute: () => MdcRoute,
} as any)

const MdcNewformRoute = MdcNewformImport.update({
  path: '/newform',
  getParentRoute: () => MdcRoute,
} as any)

const MdcCollectionsRoute = MdcCollectionsImport.update({
  path: '/collections',
  getParentRoute: () => MdcRoute,
} as any)

const MdcCollectionsCollectionIdRoute = MdcCollectionsCollectionIdImport.update(
  {
    path: '/collections/$collectionId',
    getParentRoute: () => MdcRoute,
  } as any,
)

const MdcCollectionsCollectionIdDiscIdRoute =
  MdcCollectionsCollectionIdDiscIdImport.update({
    path: '/collections/$collectionId/$discId',
    getParentRoute: () => MdcRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_mdc': {
      id: '/_mdc'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MdcImport
      parentRoute: typeof rootRoute
    }
    '/_nonauth': {
      id: '/_nonauth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NonauthImport
      parentRoute: typeof rootRoute
    }
    '/_webcam': {
      id: '/_webcam'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof WebcamImport
      parentRoute: typeof rootRoute
    }
    '/_mdc/collections': {
      id: '/_mdc/collections'
      path: '/collections'
      fullPath: '/collections'
      preLoaderRoute: typeof MdcCollectionsImport
      parentRoute: typeof MdcImport
    }
    '/_mdc/newform': {
      id: '/_mdc/newform'
      path: '/newform'
      fullPath: '/newform'
      preLoaderRoute: typeof MdcNewformImport
      parentRoute: typeof MdcImport
    }
    '/_mdc/unknowns': {
      id: '/_mdc/unknowns'
      path: '/unknowns'
      fullPath: '/unknowns'
      preLoaderRoute: typeof MdcUnknownsImport
      parentRoute: typeof MdcImport
    }
    '/_nonauth/home': {
      id: '/_nonauth/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof NonauthHomeImport
      parentRoute: typeof NonauthImport
    }
    '/_nonauth/login': {
      id: '/_nonauth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof NonauthLoginImport
      parentRoute: typeof NonauthImport
    }
    '/_nonauth/logout': {
      id: '/_nonauth/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof NonauthLogoutImport
      parentRoute: typeof NonauthImport
    }
    '/_webcam/scanner': {
      id: '/_webcam/scanner'
      path: '/scanner'
      fullPath: '/scanner'
      preLoaderRoute: typeof WebcamScannerImport
      parentRoute: typeof WebcamImport
    }
    '/_mdc/collections/$collectionId': {
      id: '/_mdc/collections/$collectionId'
      path: '/collections/$collectionId'
      fullPath: '/collections/$collectionId'
      preLoaderRoute: typeof MdcCollectionsCollectionIdImport
      parentRoute: typeof MdcImport
    }
    '/_mdc/collections/$collectionId/$discId': {
      id: '/_mdc/collections/$collectionId/$discId'
      path: '/collections/$collectionId/$discId'
      fullPath: '/collections/$collectionId/$discId'
      preLoaderRoute: typeof MdcCollectionsCollectionIdDiscIdImport
      parentRoute: typeof MdcImport
    }
  }
}

// Create and export the route tree

interface MdcRouteChildren {
  MdcCollectionsRoute: typeof MdcCollectionsRoute
  MdcNewformRoute: typeof MdcNewformRoute
  MdcUnknownsRoute: typeof MdcUnknownsRoute
  MdcCollectionsCollectionIdRoute: typeof MdcCollectionsCollectionIdRoute
  MdcCollectionsCollectionIdDiscIdRoute: typeof MdcCollectionsCollectionIdDiscIdRoute
}

const MdcRouteChildren: MdcRouteChildren = {
  MdcCollectionsRoute: MdcCollectionsRoute,
  MdcNewformRoute: MdcNewformRoute,
  MdcUnknownsRoute: MdcUnknownsRoute,
  MdcCollectionsCollectionIdRoute: MdcCollectionsCollectionIdRoute,
  MdcCollectionsCollectionIdDiscIdRoute: MdcCollectionsCollectionIdDiscIdRoute,
}

const MdcRouteWithChildren = MdcRoute._addFileChildren(MdcRouteChildren)

interface NonauthRouteChildren {
  NonauthHomeRoute: typeof NonauthHomeRoute
  NonauthLoginRoute: typeof NonauthLoginRoute
  NonauthLogoutRoute: typeof NonauthLogoutRoute
}

const NonauthRouteChildren: NonauthRouteChildren = {
  NonauthHomeRoute: NonauthHomeRoute,
  NonauthLoginRoute: NonauthLoginRoute,
  NonauthLogoutRoute: NonauthLogoutRoute,
}

const NonauthRouteWithChildren =
  NonauthRoute._addFileChildren(NonauthRouteChildren)

interface WebcamRouteChildren {
  WebcamScannerRoute: typeof WebcamScannerRoute
}

const WebcamRouteChildren: WebcamRouteChildren = {
  WebcamScannerRoute: WebcamScannerRoute,
}

const WebcamRouteWithChildren =
  WebcamRoute._addFileChildren(WebcamRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof WebcamRouteWithChildren
  '/collections': typeof MdcCollectionsRoute
  '/newform': typeof MdcNewformRoute
  '/unknowns': typeof MdcUnknownsRoute
  '/home': typeof NonauthHomeRoute
  '/login': typeof NonauthLoginRoute
  '/logout': typeof NonauthLogoutRoute
  '/scanner': typeof WebcamScannerRoute
  '/collections/$collectionId': typeof MdcCollectionsCollectionIdRoute
  '/collections/$collectionId/$discId': typeof MdcCollectionsCollectionIdDiscIdRoute
}

export interface FileRoutesByTo {
  '': typeof WebcamRouteWithChildren
  '/collections': typeof MdcCollectionsRoute
  '/newform': typeof MdcNewformRoute
  '/unknowns': typeof MdcUnknownsRoute
  '/home': typeof NonauthHomeRoute
  '/login': typeof NonauthLoginRoute
  '/logout': typeof NonauthLogoutRoute
  '/scanner': typeof WebcamScannerRoute
  '/collections/$collectionId': typeof MdcCollectionsCollectionIdRoute
  '/collections/$collectionId/$discId': typeof MdcCollectionsCollectionIdDiscIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_mdc': typeof MdcRouteWithChildren
  '/_nonauth': typeof NonauthRouteWithChildren
  '/_webcam': typeof WebcamRouteWithChildren
  '/_mdc/collections': typeof MdcCollectionsRoute
  '/_mdc/newform': typeof MdcNewformRoute
  '/_mdc/unknowns': typeof MdcUnknownsRoute
  '/_nonauth/home': typeof NonauthHomeRoute
  '/_nonauth/login': typeof NonauthLoginRoute
  '/_nonauth/logout': typeof NonauthLogoutRoute
  '/_webcam/scanner': typeof WebcamScannerRoute
  '/_mdc/collections/$collectionId': typeof MdcCollectionsCollectionIdRoute
  '/_mdc/collections/$collectionId/$discId': typeof MdcCollectionsCollectionIdDiscIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/collections'
    | '/newform'
    | '/unknowns'
    | '/home'
    | '/login'
    | '/logout'
    | '/scanner'
    | '/collections/$collectionId'
    | '/collections/$collectionId/$discId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/collections'
    | '/newform'
    | '/unknowns'
    | '/home'
    | '/login'
    | '/logout'
    | '/scanner'
    | '/collections/$collectionId'
    | '/collections/$collectionId/$discId'
  id:
    | '__root__'
    | '/_mdc'
    | '/_nonauth'
    | '/_webcam'
    | '/_mdc/collections'
    | '/_mdc/newform'
    | '/_mdc/unknowns'
    | '/_nonauth/home'
    | '/_nonauth/login'
    | '/_nonauth/logout'
    | '/_webcam/scanner'
    | '/_mdc/collections/$collectionId'
    | '/_mdc/collections/$collectionId/$discId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  MdcRoute: typeof MdcRouteWithChildren
  NonauthRoute: typeof NonauthRouteWithChildren
  WebcamRoute: typeof WebcamRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  MdcRoute: MdcRouteWithChildren,
  NonauthRoute: NonauthRouteWithChildren,
  WebcamRoute: WebcamRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_mdc",
        "/_nonauth",
        "/_webcam"
      ]
    },
    "/_mdc": {
      "filePath": "_mdc.tsx",
      "children": [
        "/_mdc/collections",
        "/_mdc/newform",
        "/_mdc/unknowns",
        "/_mdc/collections/$collectionId",
        "/_mdc/collections/$collectionId/$discId"
      ]
    },
    "/_nonauth": {
      "filePath": "_nonauth.tsx",
      "children": [
        "/_nonauth/home",
        "/_nonauth/login",
        "/_nonauth/logout"
      ]
    },
    "/_webcam": {
      "filePath": "_webcam.tsx",
      "children": [
        "/_webcam/scanner"
      ]
    },
    "/_mdc/collections": {
      "filePath": "_mdc/collections.tsx",
      "parent": "/_mdc"
    },
    "/_mdc/newform": {
      "filePath": "_mdc/newform.tsx",
      "parent": "/_mdc"
    },
    "/_mdc/unknowns": {
      "filePath": "_mdc/unknowns.tsx",
      "parent": "/_mdc"
    },
    "/_nonauth/home": {
      "filePath": "_nonauth/home.tsx",
      "parent": "/_nonauth"
    },
    "/_nonauth/login": {
      "filePath": "_nonauth/login.tsx",
      "parent": "/_nonauth"
    },
    "/_nonauth/logout": {
      "filePath": "_nonauth/logout.tsx",
      "parent": "/_nonauth"
    },
    "/_webcam/scanner": {
      "filePath": "_webcam/scanner.tsx",
      "parent": "/_webcam"
    },
    "/_mdc/collections/$collectionId": {
      "filePath": "_mdc/collections_.$collectionId.tsx",
      "parent": "/_mdc"
    },
    "/_mdc/collections/$collectionId/$discId": {
      "filePath": "_mdc/collections_.$collectionId_.$discId.tsx",
      "parent": "/_mdc"
    }
  }
}
ROUTE_MANIFEST_END */
